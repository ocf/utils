#!/bin/sh

# how: view or edit source of a command that calls a script in $PATH
# 2011-11-17: crudely assembled, daradib@OCF
# 2011-04-01: rewritten, daradib@OCF
# 2011-08-21: revised output, daradib@OCF
# 2012-02-01: revised formatting, daradib@OCF

set -e

usage(){
  echo "Usage: '$(basename "$0") COMMAND'"
  echo
  echo "Displays the source code of the script run when COMMAND is executed."
}

# process arguments and respond if needed
if [ $# -ne 1 ]; then
  echo 'Error: Incorrect number of arguments.' 1>&2
  echo
  usage
  exit 1
elif [ "$1" = '-h' ] || [ "$1" = '--help' ]; then
  usage
  exit
fi

if [ -z "$PAGER" ]; then
  PAGER=less
fi
COMMAND="$1"

# find file in PATH
file=$(command -v "$COMMAND" || true)

# if file does not exist/is broken symlink/is not executable, command does not exist
if [ -z "$file" ]; then
  echo "Error: Command '$COMMAND' could not be found (and executable) in your PATH." 1>&2
  exit 2
fi

# print file location
echo "Program found: $file"

# follow any symlinks
if [ -L "$file" ]; then
  target=$(readlink -en "$file")
  echo "Final target@: $target"
else
  target="$file"
fi

# find filetype of file
targettype=$(file -i "$target" | awk '{print $2}' | cut -f 1 -d ';')

# report filetype
echo "MIME filetype: $targettype"

# check for and report binary files
if ! ( echo "$targettype" | grep -q ^text ); then
  echo "Error: Command '$COMMAND' does not refer to a script." 1>&2
  echo "Its type is: " 1>&2
  file -b "$target" 1>&2
  exit 2
fi

# check if pager exists
if [ -z "$(command -v "$PAGER")" ]; then
  echo "Error: Pager '$PAGER' could not be found (or not executable) in your PATH." 1>&2
  exit 1
fi

# view or edit the target script
eval "$PAGER" "$target"
