#!/usr/bin/env python3
"""Write stdin logs to OCF's remote syslog server.

You can use arbitrary stream names (without configuring them before); each
stream will show up at syslog:/var/log/remote/<stream>.log.
"""
import argparse
import os
import re
import subprocess
import sys


LOGGER_ARGS = ('logger', '-T', '-n', 'syslog', '-P', '514', '-t')


class LoggingFailure(Exception):
    pass


def write_line(stream, line):
    """Write a line to a stream.

    This might make sense to move to ocflib some day.
    """
    ret = subprocess.call(LOGGER_ARGS + (stream, '--', line))
    if ret != 0:
        raise LoggingFailure('logger exited nonzero: {}'.format(ret))


def valid_stream(stream):
    if not re.match('^[a-z0-9\-_]+$', stream):
        raise ValueError('Bad stream name: {}'.format(stream))
    else:
        return stream


def is_jessie():
    with open('/etc/os-release') as f:
        return 'jessie' in f.read()


def main(argv=None):
    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter,
    )
    parser.add_argument('stream', type=valid_stream)
    args = parser.parse_args(argv)

    # On post-jessie, logger supports reading logs from stdin directly.
    # TODO: remove once we drop jessie
    if not is_jessie():
        os.execvp('logger', LOGGER_ARGS + (args.stream,))
    else:
        for line in sys.stdin:
            line = line.rstrip('\n')
            write_line(args.stream, line)


if __name__ == '__main__':
    exit(main())
