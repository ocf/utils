#!/bin/bash
# Script for sorrying OCF user accounts

REASONPATH=/opt/share/utils/staff/acct/sorry
LDAPSEARCH=$(command -v ldapsearch)
LDAPMODIFY=$(command -v ldapmodify)
KINIT=$(command -v kinit)
KDESTROY=$(command -v kdestroy)
#KRB5CCNAME=/root/krb5cc_sorry
#export KRB5CCNAME

# check to see if running as root
if [ "$(/usr/bin/id -u)" != 0 ]; then
    echo "You must be root to run this."
    exit 2
fi

if [ -z "$1" ] || [ -z "$2" ]; then
    echo "Usage: $0 [user to be sorried] [sorry reason file]"
    echo
    echo "Standard Sorry Reasons:"
    find "$REASONPATH" -maxdepth 1 -mindepth 1 -type f -printf "    %f\\n"
    echo
    echo "For custom sorry reasons you can pass in your own file"
    exit 0
fi

sorriedUser=$1

if [[ ! "$sorriedUser" =~ ^[a-z]+ ]]; then
    echo "$sorriedUser is an invalid username"
    exit 3
fi

if [ -z "$(getent passwd "$sorriedUser")" ]; then
    echo "User $sorriedUser does not exist"
    exit 3
fi

sorryFile=$2

if [ ! -f "$sorryFile" ]; then
    sorryFile="$REASONPATH/$sorryFile"
    if [ ! -f "$sorryFile" ]; then
        echo "Invalid sorry file"
        exit 3
    fi
fi

userdir=$(ldapsearch -x uid="$sorriedUser" | grep homeDirectory | cut -d' ' -f2)

# Rewriting this to use bash variable substitution is annoying and confusing, so
# just use sed instead and ignore the shellcheck warning
# shellcheck disable=SC2001
httpdir=$(echo "$sorriedUser" | sed -E 's%([a-z])[a-z]*%/services/http/users/\1/\0%')

rootstaffer="$SUDO_USER"

if [ "$rootstaffer" = "root" ] || [ -z "$rootstaffer" ]; then
    echo "The sorry.log is much more useful when it logs who you are"
    echo "rather than simply 'root'. Please enter your username:"
    read -r rootstaffer
fi

if [ -z "$SORRY_KRB5CCNAME" ]; then
    echo "You are $rootstaffer"
    if ! $KINIT "${rootstaffer}/admin"; then
        echo "kinit failed, bailing out!"
        exit 1
    fi
else
    echo "SORRY_KRB5CCNAME set in environment."
    echo "Assuming this file contains current admin credentials."
    KRB5CCNAME="$SORRY_KRB5CCNAME"
    export KRB5CCNAME
fi

sorryshell=/opt/share/utils/bin/sorried

echo ""
echo "Copying sorry file and making .oldshell file"

oldshell=$($LDAPSEARCH -x "(uid=$sorriedUser)" loginShell | grep "^loginShell:" | cut -d" " -f2)

if [[ ! -f .oldshell ]]; then
    echo "$oldshell" > "$userdir/.oldshell"
fi

cp "$sorryFile" "$userdir/.sorry"
chmod 400 "$userdir/.sorry"
chown "$sorriedUser:ocf" "$userdir/.sorry"

echo ""
echo "Changing user's shell to a sorry shell"

sorrygid=$(getent group sorry | cut -d : -f 3)
$LDAPMODIFY -H ldaps://ldap.ocf.berkeley.edu <<EOF
dn: uid=$sorriedUser,ou=People,dc=OCF,dc=Berkeley,dc=EDU
changetype: modify
replace: loginShell
loginShell: $sorryshell
-
replace: gidNumber
gidNumber: $sorrygid
EOF

echo "Changing permissions on httpdir to 000"
if [[ -d "$httpdir" ]]; then
    chmod 000 "$httpdir"
fi

echo ""
echo "Changing permissions on home directory to 500"
chmod 500 "$userdir"

echo ""
echo ""
echo ""
echo "Final system check"
ldapsearch -x uid="$sorriedUser"
ldapsearch -x cn=sorry | tail
finger -m "$sorriedUser"
ls -la "$userdir"
ls -ld "$httpdir"

# logging
echo "$(/bin/date) - $rootstaffer $sorriedUser" >> /opt/acct/sorry.log

# Notify user by email if email address is available.
email_from='Open Computing Facility <help@ocf.berkeley.edu>'
email_subject='[OCF] Account disabled'
email_to="$(ldapsearch "uid=${sorriedUser}" mail | grep ^mail | cut -d' ' -f2)"
[ -n "$email_to" ] && \
  mail -a "From: ${email_from}" -s "$email_subject" "$email_to" <<EOF
Hello,

Your OCF account has been disabled.

Your account name is: ${sorriedUser}

The reason your account has been disabled:
$(cat "$sorryFile")

Feel free to reply to this message.
Please do not share your password with anyone or over email.

$(python3 -c 'import ocflib.misc.mail as mail; print(mail.MAIL_SIGNATURE)')
EOF

if [ -z "$SORRY_KRB5CCNAME" ]; then
    $KDESTROY
fi

# Huge notice
echo "NOW RUN note -u $sorriedUser reason. NOW"
